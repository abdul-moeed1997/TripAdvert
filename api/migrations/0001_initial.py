# Generated by Django 3.0 on 2020-03-23 00:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone_no', models.CharField(max_length=11)),
                ('image', models.ImageField(null=True, upload_to='uploads/users')),
                ('password', models.CharField(max_length=255)),
                ('user_type', models.IntegerField(default=1)),
                ('date', models.DateField(auto_now_add=True)),
                ('is_blocked', models.BooleanField(default=False, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pic', models.ImageField(null=True, upload_to='uploads/events/')),
                ('description', models.CharField(max_length=1000)),
                ('category', models.CharField(max_length=20, null=True)),
                ('home', models.CharField(max_length=255, null=True)),
                ('destination', models.CharField(max_length=255, null=True)),
                ('date_of_departure', models.DateTimeField(null=True)),
                ('date_of_arrival', models.DateTimeField(null=True)),
                ('slots', models.IntegerField()),
                ('price', models.IntegerField()),
                ('is_completed', models.BooleanField(default=False)),
                ('is_accomodation', models.BooleanField(default=False)),
                ('is_sightseeing', models.BooleanField(default=False)),
                ('is_food', models.BooleanField(default=False)),
                ('accomodation_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('sightseeing_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('food_description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnic', models.CharField(blank=True, max_length=13, unique=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('experience', models.CharField(blank=True, max_length=255)),
                ('organization', models.CharField(blank=True, max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.Organizer')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('sentBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NotificationSender', to=settings.AUTH_USER_MODEL)),
                ('sentFor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='NotificationReceiver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('sentBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageSender', to=settings.AUTH_USER_MODEL)),
                ('sentFor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageReceiver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='uploads/events/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='api.Event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizer', to='api.Organizer'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='BlockRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('proof', models.ImageField(blank=True, null=True, upload_to='')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('sentBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RequestBy', to=settings.AUTH_USER_MODEL)),
                ('sentFor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RequestFor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizer1', to='api.Organizer'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user1', to='api.User'),
        ),
        migrations.AddField(
            model_name='person',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
